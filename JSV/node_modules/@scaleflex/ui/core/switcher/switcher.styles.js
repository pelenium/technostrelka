import styled, { css } from 'styled-components';
import { generateClassNames, applyDisplayNames } from '../../utils/functions';
import { Color as PColor } from '../../utils/types/palette';
import { SwitcherSize } from './switcher-size';
import { sizeInnerSwitcherMixin, translateSwitcherMixin, translateInnerSwitcherMixin } from './switcher.mixin';
import { getSwitcherIconSize, getSwitcherSize } from './switcher.utils';
var baseClassName = 'Switcher';
var SwitcherWrapper = /*#__PURE__*/styled.div.attrs({
  className: generateClassNames(baseClassName, 'root')
}).withConfig({
  componentId: "sc-16vo7ts-0"
})(function (_ref) {
  var disabled = _ref.disabled;
  return css(["position:relative;display:inline-flex;cursor:", ";"], disabled ? 'default' : 'pointer');
});
var Switcher = /*#__PURE__*/styled.div.attrs({
  className: generateClassNames(baseClassName, 'switcher')
}).withConfig({
  componentId: "sc-16vo7ts-1"
})(function (_ref2) {
  var disabled = _ref2.disabled,
    _ref2$size = _ref2.size,
    size = _ref2$size === void 0 ? SwitcherSize.Sm : _ref2$size,
    palette = _ref2.theme.palette;
  return css(["position:relative;width:", "px;height:", "px;background:", ";border-radius:20px;&:before{content:'';position:absolute;width:", "px;height:", "px;border-radius:35px;top:50%;left:", "px;transition:transform 0.3s ease 0s,opacity 0.5s ease 0s;background:", ";transform:translate(0,-50%);}&:after{content:'';position:absolute;", " border-radius:20px;top:50%;left:", "px;background:", ";transform:translate(50%,-50%);transition:transform 0.3s ease 0s,opacity 0.3s ease 0s;opacity:0;}"], getSwitcherSize(size) * 2, getSwitcherSize(size), disabled ? palette[PColor.BackgroundActive] : palette[PColor.BackgroundGrey], getSwitcherIconSize(size), getSwitcherIconSize(size), size === SwitcherSize.Lg ? '3' : '2', disabled ? palette[PColor.BackgroundGrey] : palette[PColor.IconsMuted], sizeInnerSwitcherMixin[size], size === SwitcherSize.Lg ? '6.9' : '3.9', palette[PColor.IconsInvert]);
});
var Input = /*#__PURE__*/styled.input.attrs({
  className: generateClassNames(baseClassName, 'Input'),
  type: 'checkbox'
}).withConfig({
  componentId: "sc-16vo7ts-2"
})(function (_ref3) {
  var $disabled = _ref3.$disabled,
    _ref3$size = _ref3.size,
    size = _ref3$size === void 0 ? SwitcherSize.Sm : _ref3$size,
    palette = _ref3.theme.palette;
  return css(["opacity:0;position:absolute;z-index:99;width:", "px;height:", "px;cursor:", ";&:hover + ", ":after{opacity:", ";}&:checked{&:hover + ", "{background:", ";}}&:checked + ", "{background:", ";&:before{", ";background:", ";}&:after{", " background:", ";}}"], getSwitcherSize(size) * 2, getSwitcherSize(size), $disabled ? 'default' : 'pointer', Switcher, $disabled ? 0 : 1, Switcher, !$disabled && palette[PColor.AccentPrimaryHover], Switcher, $disabled ? palette[PColor.Accent_2_8_Opacity] : palette[PColor.AccentStateless], translateSwitcherMixin[size], palette[PColor.IconsInvert], translateInnerSwitcherMixin[size], palette[PColor.AccentStateless_0_4_Opacity]);
});
var Styled = applyDisplayNames({
  Switcher: Switcher,
  Input: Input,
  SwitcherWrapper: SwitcherWrapper
});
export default Styled;