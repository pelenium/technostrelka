import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
var _excluded = ["size", "checked", "onChange", "SwitcherPropsData", "switcherProps", "readOnly", "disabled"];
import React from 'react';
import PT from 'prop-types';
import { intrinsicComponent, objectValues } from '../../utils/functions';
import Styled from './switcher.styles';
import { SwitcherSize } from './switcher-size';
var Switcher = intrinsicComponent(function (_ref, ref) {
  var size = _ref.size,
    checked = _ref.checked,
    onChange = _ref.onChange,
    SwitcherPropsData = _ref.SwitcherPropsData,
    switcherProps = _ref.switcherProps,
    readOnly = _ref.readOnly,
    disabled = _ref.disabled,
    rest = _objectWithoutProperties(_ref, _excluded);
  return /*#__PURE__*/React.createElement(Styled.SwitcherWrapper, _extends({
    disabled: disabled
  }, SwitcherPropsData, rest), /*#__PURE__*/React.createElement(Styled.Input, _extends({
    ref: ref,
    checked: checked,
    onChange: readOnly || disabled ? undefined : onChange,
    readOnly: readOnly,
    $disabled: disabled,
    size: size
  }, switcherProps)), /*#__PURE__*/React.createElement(Styled.Switcher, {
    disabled: disabled,
    size: size
  }));
});
Switcher.defaultProps = {
  checked: false,
  size: SwitcherSize.Sm
};
Switcher.propTypes = {
  checked: PT.bool,
  onChange: PT.func,
  switcherProps: PT.object,
  SwitcherPropsData: PT.object,
  readOnly: PT.bool,
  disabled: PT.bool,
  size: PT.oneOf(objectValues(SwitcherSize))
};
export default Switcher;