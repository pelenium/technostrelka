import styled, { css } from 'styled-components';
import { generateClassNames, applyDisplayNames } from '../../utils/functions';
import { Color as PColor } from '../../utils/types/palette';
import { Size } from './types';
import StyledBadge from '../badge/badge.styles';
import { tabSizeMixin, iconSizeMixin } from './tab.mixin';
var baseClassName = 'Tab';
var Dot = /*#__PURE__*/styled.span.attrs({
  className: generateClassNames(baseClassName, 'Dot')
}).withConfig({
  componentId: "sc-8f1lki-0"
})(function () {
  return css(["position:absolute;display:flex;top:-5%;right:15%;border:1px solid white;border-radius:50%;"]);
});
var Icon = /*#__PURE__*/styled.div.attrs({
  className: generateClassNames(baseClassName, 'Icon')
}).withConfig({
  componentId: "sc-8f1lki-1"
})(function (_ref) {
  var palette = _ref.theme.palette,
    _ref$disabled = _ref.disabled,
    disabled = _ref$disabled === void 0 ? false : _ref$disabled,
    _ref$size = _ref.size,
    size = _ref$size === void 0 ? Size.Md : _ref$size;
  return css(["margin-right:8px;color:", ";transition:all 100ms ease-out;svg{", "}"], disabled ? palette[PColor.IconsMuted] : palette[PColor.IconsPrimary], iconSizeMixin[size]);
});
var Label = /*#__PURE__*/styled.div.attrs({
  className: generateClassNames(baseClassName, 'Label')
}).withConfig({
  componentId: "sc-8f1lki-2"
})(["transition:all 100ms ease-out;"]);
var Tab = /*#__PURE__*/styled.div.attrs({
  className: generateClassNames(baseClassName, 'root')
}).withConfig({
  componentId: "sc-8f1lki-3"
})(function (_ref2) {
  var palette = _ref2.theme.palette,
    _ref2$icon = _ref2.icon,
    icon = _ref2$icon === void 0 ? false : _ref2$icon,
    _ref2$disabled = _ref2.disabled,
    disabled = _ref2$disabled === void 0 ? false : _ref2$disabled,
    _ref2$size = _ref2.size,
    size = _ref2$size === void 0 ? Size.Md : _ref2$size;
  return css(["", " position:relative;display:inline-flex;align-items:center;text-align:center;color:", ";transition:all 100ms ease-out;", "{color:", ";background-color:transparent;transition:all 100ms ease-out;", "}", ""], tabSizeMixin[size], disabled ? palette[PColor.ButtonDisabledText] : palette[PColor.TextPrimary], StyledBadge.Badge, palette[PColor.TextPrimary], tabSizeMixin[size], !disabled && css(["cursor:pointer;&:hover{", "{color:", ";}", "{color:", ";}", "{color:", ";}box-shadow:", ";}&:active{", "{color:", ";}", "{display:none;}", "{color:", ";}", "{color:", ";}box-shadow:", ";}&.active{", "{color:", ";}", "{display:none;}", "{color:", ";}", "{color:", ";}box-shadow:inset 0px -2px 0px ", ";}"], StyledBadge.Badge, palette[PColor.AccentPrimaryHover], Icon, palette[PColor.AccentPrimaryHover], Label, palette[PColor.AccentPrimaryHover], icon ? "inset 0px -2px 0px ".concat(palette[PColor.BorderHoverBottom]) : '', StyledBadge.Badge, palette[PColor.AccentPrimaryActive], Dot, Icon, palette[PColor.AccentPrimaryActive], Label, palette[PColor.AccentPrimaryActive], icon ? "inset 0px -2px 0px ".concat(palette[PColor.BorderActiveBottom]) : '', StyledBadge.Badge, palette[PColor.AccentPrimary], Dot, Icon, palette[PColor.AccentPrimary], Label, palette[PColor.AccentPrimary], palette[PColor.AccentPrimary]));
});
var Icons = /*#__PURE__*/styled.span.attrs({
  className: generateClassNames(baseClassName, 'Icons')
}).withConfig({
  componentId: "sc-8f1lki-4"
})(function () {
  return css(["position:relative;"]);
});
var Badge = /*#__PURE__*/styled.span.attrs({
  className: generateClassNames(baseClassName, 'Badge')
}).withConfig({
  componentId: "sc-8f1lki-5"
})(function () {
  return css(["display:flex;margin-left:5px;"]);
});
var Styled = applyDisplayNames({
  Tab: Tab,
  Icons: Icons,
  Icon: Icon,
  Dot: Dot,
  Label: Label,
  Badge: Badge
});
export default Styled;