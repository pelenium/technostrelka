import { DrawerProps } from './drawer.props';
declare const Styled: {
    TemporaryDrawer: import("styled-components").StyledComponent<"div", import("styled-components").DefaultTheme, {
        className: string;
    } & DrawerProps, "className">;
    PersistentDrawer: import("styled-components").StyledComponent<"div", import("styled-components").DefaultTheme, {
        className: string;
    }, "className">;
    Drawer: import("styled-components").StyledComponent<"div", import("styled-components").DefaultTheme, {
        className: string;
    } & {
        open?: boolean | undefined;
        isCollapsed?: boolean | undefined;
        top?: number | undefined;
    }, "className">;
    Header: import("styled-components").StyledComponent<"div", import("styled-components").DefaultTheme, {
        className: string;
    } & {
        isCollapsed: boolean;
    }, "className">;
    Body: import("styled-components").StyledComponent<"div", import("styled-components").DefaultTheme, {
        className: string;
    }, "className">;
    Footer: import("styled-components").StyledComponent<"div", import("styled-components").DefaultTheme, {
        className: string;
    } & {
        isCollapsed: boolean;
    }, "className">;
    List: import("styled-components").StyledComponent<"ul", import("styled-components").DefaultTheme, {
        className: string;
    }, "className">;
    Item: import("styled-components").StyledComponent<"li", import("styled-components").DefaultTheme, {
        className: string;
    } & {
        isCollapsed?: boolean | undefined;
        selected?: boolean | undefined;
    }, "className">;
    ItemButton: import("styled-components").StyledComponent<"div", import("styled-components").DefaultTheme, {
        className: string;
    } & {
        isCollapsed?: boolean | undefined;
        selected?: boolean | undefined;
    }, "className">;
    Icon: import("styled-components").StyledComponent<"div", import("styled-components").DefaultTheme, {
        className: string;
    } & {
        isCollapsed?: boolean | undefined;
    }, "className">;
    ItemText: import("styled-components").StyledComponent<"div", import("styled-components").DefaultTheme, {
        className: string;
    } & {
        isCollapsed?: boolean | undefined;
        font?: "text-extra-small" | "text-small" | "text-small-up" | "text-medium" | "text-large" | "text-extra-large" | "text-x-extra-large" | "title-h6" | "title-h5" | "title-h4" | "title-h3" | "title-h2" | "title-h1" | "label-extra-small" | "label-extra-small-emphasis" | "label-extra-small-up" | "label-small" | "label-small-emphasis" | "label-small-up" | "label-small-up-emphasis" | "label-medium" | "label-medium-emphasis" | "label-large" | "label-large-emphasis" | "label-large-up" | "label-extra-large-emphasis" | "label-extra-large" | "label-x-extra-large-emphasis" | "label-x-extra-large" | "label-x-x-extra-large-emphasis" | "label-x-x-extra-large" | "label-x-x-x-extra-large" | "btn-sm-emphasis" | "btn-sm" | "btn-sm-up-emphasis" | "btn-sm-up" | "btn-md-emphasis" | "btn-md" | "btn-lg-emphasis" | "btn-lg" | "btn-lg-up-emphasis" | "btn-lg-up" | "link-small" | "link-small-emphasis" | "link-small-up" | "link-small-up-emphasis" | "link-medium" | "link-medium-emphasis" | "link-large" | "link-large-emphasis" | "link-large-up" | "link-large-up-emphasis" | "input-sm" | "input-sm-up" | "input-md" | "input-lg" | undefined;
    }, "className">;
    DrawerAccordion: import("styled-components").StyledComponent<import("react").ForwardRefExoticComponent<import("../accordion").AccordionProps & import("react").RefAttributes<HTMLDivElement>>, import("styled-components").DefaultTheme, {
        className: string;
    } & {
        selected?: boolean | undefined;
    }, "className">;
    CollapsedButton: import("styled-components").StyledComponent<"div", import("styled-components").DefaultTheme, {
        className: string;
    } & {
        isCollapsed?: boolean | undefined;
        selected?: boolean | undefined;
    } & {
        className: string;
    }, "className">;
};
export default Styled;
