import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
var _excluded = ["children", "selected"];
import React, { useContext } from 'react';
import PT from 'prop-types';
import { intrinsicComponent } from '../../utils/functions';
import Styled from './drawer.styles';
import DrawerContext from './drawer.context';
var DrawerAccrodion = intrinsicComponent(function (_ref, ref) {
  var children = _ref.children,
    selected = _ref.selected,
    rest = _objectWithoutProperties(_ref, _excluded);
  var _useContext = useContext(DrawerContext),
    isCollapsed = _useContext.isCollapsed;
  return isCollapsed ? /*#__PURE__*/React.createElement(React.Fragment, null, children) : /*#__PURE__*/React.createElement(Styled.DrawerAccordion, _extends({
    selected: selected
  }, rest, {
    ref: ref
  }), children);
});
DrawerAccrodion.defaultProps = {
  selected: false
};
DrawerAccrodion.propTypes = {
  selected: PT.bool
};
export default DrawerAccrodion;