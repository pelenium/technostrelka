import _extends from "@babel/runtime/helpers/extends";
import _defineProperty from "@babel/runtime/helpers/defineProperty";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
var _excluded = ["size", "label", "radioProps", "readOnly", "disabled", "radioStyles", "labelStyles", "onChange", "checked"];
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
import React from 'react';
import PT from 'prop-types';
import { intrinsicComponent, objectValues } from '../../utils/functions';
import Radio, { RadioSize } from '../radio';
import Styled from './radio-group.styles';
var RadioGroup = intrinsicComponent(function (_ref, ref) {
  var size = _ref.size,
    label = _ref.label,
    radioProps = _ref.radioProps,
    readOnly = _ref.readOnly,
    disabled = _ref.disabled,
    radioStyles = _ref.radioStyles,
    labelStyles = _ref.labelStyles,
    onChange = _ref.onChange,
    checked = _ref.checked,
    rest = _objectWithoutProperties(_ref, _excluded);
  return /*#__PURE__*/React.createElement(Styled.RadioGroup, _extends({
    disabled: disabled,
    ref: ref
  }, rest), /*#__PURE__*/React.createElement(Radio, {
    radioProps: radioProps,
    readOnly: readOnly,
    disabled: disabled,
    checked: checked,
    onChange: onChange,
    size: size,
    style: _objectSpread({}, radioStyles)
  }), /*#__PURE__*/React.createElement(Styled.Label, {
    disabled: disabled,
    size: size,
    style: _objectSpread({}, labelStyles)
  }, label));
});
RadioGroup.defaultProps = {
  checked: false,
  size: RadioSize.Sm
};
RadioGroup.propTypes = {
  label: PT.node,
  checked: PT.bool,
  onChange: PT.func,
  radioProps: PT.object,
  radioStyles: PT.object,
  labelStyles: PT.object,
  readOnly: PT.bool,
  disabled: PT.bool,
  size: PT.oneOf(objectValues(RadioSize))
};
export default RadioGroup;