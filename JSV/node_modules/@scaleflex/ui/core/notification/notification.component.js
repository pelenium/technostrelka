import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
var _excluded = ["status", "removeBackground", "hideIcon", "title", "message", "onClose"];
import React from 'react';
import PT from 'prop-types';
import CrossOutline from '@scaleflex/icons/cross-outline';
import { intrinsicComponent, objectValues } from '../../utils/functions';
import PopupStatus from '../popup-status';
import CrossButton from '../cross-button';
import { NotificationStatus } from './types';
import Styled from './notification.styles';
var Notification = intrinsicComponent(function (_ref, ref) {
  var status = _ref.status,
    removeBackground = _ref.removeBackground,
    hideIcon = _ref.hideIcon,
    title = _ref.title,
    message = _ref.message,
    onClose = _ref.onClose,
    rest = _objectWithoutProperties(_ref, _excluded);
  return /*#__PURE__*/React.createElement(Styled.NotificationWrapper, _extends({
    ref: ref,
    status: status,
    removeBackground: removeBackground,
    hideIcon: hideIcon,
    isTitle: title
  }, rest), /*#__PURE__*/React.createElement(Styled.Notification, null, !hideIcon && /*#__PURE__*/React.createElement(Styled.Icon, {
    removeBackground: removeBackground
  }, /*#__PURE__*/React.createElement(PopupStatus, {
    status: status,
    notificationBackground: !removeBackground
  })), /*#__PURE__*/React.createElement(Styled.MessageWrapper, null, title && /*#__PURE__*/React.createElement(Styled.Title, null, title), /*#__PURE__*/React.createElement(Styled.Message, null, message))), !removeBackground && /*#__PURE__*/React.createElement(Styled.Close, {
    onClick: onClose
  }, /*#__PURE__*/React.createElement(CrossButton, {
    size: "sm"
  }, function (iconProps) {
    return /*#__PURE__*/React.createElement(CrossOutline, iconProps);
  })));
});
Notification.defaultProps = {
  status: NotificationStatus.Info,
  removeBackground: false,
  hideIcon: false
};
Notification.propTypes = {
  status: PT.oneOf(objectValues(NotificationStatus)),
  removeBackground: PT.bool,
  hideIcon: PT.bool,
  title: PT.node,
  message: PT.node,
  onClose: PT.func
};
export default Notification;