import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
var _excluded = ["children", "disabled", "size"];
import React from 'react';
import PT from 'prop-types';
import { intrinsicComponent, objectValues } from '../../utils/functions';
import { Size } from './types';
import Styled from './menu-item.styles';
var getIconSize = function getIconSize(sizeName) {
  switch (sizeName) {
    case Size.Md:
      return 16;
    case Size.Sm:
    default:
      return 14;
  }
};
var MenuItemIcon = intrinsicComponent(function (_ref, ref) {
  var children = _ref.children,
    disabled = _ref.disabled,
    _ref$size = _ref.size,
    size = _ref$size === void 0 ? Size.Md : _ref$size,
    rest = _objectWithoutProperties(_ref, _excluded);
  return /*#__PURE__*/React.createElement(Styled.Icon, _extends({
    disabled: disabled
  }, rest, {
    ref: ref
  }), children && typeof children === 'function' ? children({
    size: getIconSize(size)
  }) : children);
});
MenuItemIcon.defaultProps = {
  size: Size.Md
};
MenuItemIcon.propTypes = {
  size: PT.oneOf(objectValues(Size)),
  children: PT.oneOfType([PT.node, PT.func]).isRequired,
  disabled: PT.bool
};
export default MenuItemIcon;