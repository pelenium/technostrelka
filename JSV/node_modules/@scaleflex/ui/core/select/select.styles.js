import styled, { css } from 'styled-components';
import { generateClassNames, applyDisplayNames } from '../../utils/functions';
import { Color as PColor } from '../../utils/types/palette';
// import { BorderRadiusSize as BRSize } from '../../utils/types/shape';
import InputStyled from '../input/input.styles';
import { fontSizeInputMixin } from '../input/input.mixin';
import { Size } from '../menu-item/types';
var baseClassName = 'Select';
var Icon = /*#__PURE__*/styled.span.attrs({
  className: generateClassNames(baseClassName, 'Icon')
}).withConfig({
  componentId: "sc-mfrapg-0"
})(function (_ref) {
  var palette = _ref.theme.palette,
    size = _ref.size;
  return css(["display:flex;flex-shrink:0;color:", ";padding:", ";margin-left:6px;"], palette[PColor.IconsPrimary], size === Size.Md ? '2.5px' : '2px');
});
var TickIcon = /*#__PURE__*/styled.span.attrs({
  className: generateClassNames(baseClassName, 'tickIcon')
}).withConfig({
  componentId: "sc-mfrapg-1"
})(function (_ref2) {
  var palette = _ref2.theme.palette;
  return css(["color:", ";"], palette[PColor.AccentStateless]);
});
var Container = /*#__PURE__*/styled.div.attrs({
  className: generateClassNames(baseClassName, 'Container')
}).withConfig({
  componentId: "sc-mfrapg-2"
})(function (_ref3) {
  var _ref3$fullWidth = _ref3.fullWidth,
    fullWidth = _ref3$fullWidth === void 0 ? false : _ref3$fullWidth;
  return css(["position:relative;display:inline-flex;", ""], fullWidth ? 'width: 100%' : '');
});
var Select = /*#__PURE__*/styled(InputStyled.Input).attrs({
  className: generateClassNames(baseClassName, 'root')
}).withConfig({
  componentId: "sc-mfrapg-3"
})(function (_ref4) {
  var palette = _ref4.theme.palette,
    disabled = _ref4.disabled,
    readOnly = _ref4.readOnly,
    _ref4$size = _ref4.size,
    size = _ref4$size === void 0 ? 'sm' : _ref4$size;
  return css(["cursor:", ";user-select:none;background:", ";", ";"], disabled || readOnly ? 'default' : 'pointer', disabled ? palette[PColor.BackgroundHover] : palette[PColor.BackgroundStateless], fontSizeInputMixin[size]);
});
var Label = /*#__PURE__*/styled.label.attrs({
  className: generateClassNames(baseClassName, 'Label')
}).withConfig({
  componentId: "sc-mfrapg-4"
})(["flex-grow:1;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;"]);
var Placeholder = /*#__PURE__*/styled.span.attrs({
  className: generateClassNames(baseClassName, 'Placeholder')
}).withConfig({
  componentId: "sc-mfrapg-5"
})(function (_ref5) {
  var palette = _ref5.theme.palette,
    size = _ref5.size;
  return css(["width:100%;color:", ";margin-right:", "px;"], palette[PColor.TextPlaceholder], size === Size.Md ? 10 : 6);
});
var Input = /*#__PURE__*/styled.input.attrs({
  className: generateClassNames(baseClassName, 'Input'),
  'aria-hidden': 'true',
  tabindex: '-1'
}).withConfig({
  componentId: "sc-mfrapg-6"
})(["left:0;width:100%;bottom:0;opacity:0;position:absolute;pointer-events:none;box-sizing:border-box;"]);
var Styled = applyDisplayNames({
  Container: Container,
  Select: Select,
  Label: Label,
  Icon: Icon,
  TickIcon: TickIcon,
  Input: Input,
  Placeholder: Placeholder
});
export default Styled;