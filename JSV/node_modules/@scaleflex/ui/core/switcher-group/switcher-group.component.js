import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
var _excluded = ["size", "label", "switcherProps", "SwitcherProps", "checked", "onChange", "readOnly", "disabled"];
import React from 'react';
import PT from 'prop-types';
import { intrinsicComponent, objectValues } from '../../utils/functions';
import Switcher from '../switcher';
import Styled from './switcher-group.styles';
import { SwitcherSize } from '../switcher/switcher-size';
var SwitcherGroup = intrinsicComponent(function (_ref, ref) {
  var size = _ref.size,
    label = _ref.label,
    switcherProps = _ref.switcherProps,
    SwitcherProps = _ref.SwitcherProps,
    checked = _ref.checked,
    onChange = _ref.onChange,
    readOnly = _ref.readOnly,
    disabled = _ref.disabled,
    rest = _objectWithoutProperties(_ref, _excluded);
  return /*#__PURE__*/React.createElement(Styled.SwitcherGroup, _extends({
    disabled: disabled,
    ref: ref
  }, rest), /*#__PURE__*/React.createElement(Switcher, {
    size: size,
    SwitcherPropsData: SwitcherProps,
    switcherProps: switcherProps,
    readOnly: readOnly,
    disabled: disabled,
    onChange: onChange,
    checked: checked
  }), /*#__PURE__*/React.createElement(Styled.Label, {
    disabled: disabled,
    size: size
  }, label));
});
SwitcherGroup.defaultProps = {
  checked: false,
  size: SwitcherSize.Sm
};
SwitcherGroup.propTypes = {
  label: PT.string,
  checked: PT.bool,
  onChange: PT.func,
  switcherProps: PT.object,
  SwitcherProps: PT.object,
  readOnly: PT.bool,
  disabled: PT.bool,
  size: PT.oneOf(objectValues(SwitcherSize))
};
export default SwitcherGroup;