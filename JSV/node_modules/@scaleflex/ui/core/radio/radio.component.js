import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
var _excluded = ["size", "checked", "onChange", "radioProps", "readOnly", "disabled"];
import React from 'react';
import PT from 'prop-types';
import { intrinsicComponent, objectValues } from '../../utils/functions';
import Styled from './radio.styles';
import { RadioSize } from './size';
var Radio = intrinsicComponent(function (_ref, ref) {
  var size = _ref.size,
    checked = _ref.checked,
    onChange = _ref.onChange,
    radioProps = _ref.radioProps,
    readOnly = _ref.readOnly,
    disabled = _ref.disabled,
    rest = _objectWithoutProperties(_ref, _excluded);
  return /*#__PURE__*/React.createElement(Styled.Radio, _extends({
    disabled: disabled
  }, rest, {
    ref: ref
  }), /*#__PURE__*/React.createElement(Styled.Input, _extends({
    checked: checked,
    onChange: readOnly || disabled ? undefined : onChange,
    disabled: disabled,
    size: size
  }, radioProps)), /*#__PURE__*/React.createElement(Styled.RadioBox, {
    disabled: disabled,
    size: size
  }));
});
Radio.defaultProps = {
  checked: false,
  size: RadioSize.Sm
};
Radio.propTypes = {
  checked: PT.bool,
  onChange: PT.func,
  // eslint-disable-next-line react/forbid-prop-types
  radioProps: PT.object,
  readOnly: PT.bool,
  disabled: PT.bool,
  size: PT.oneOf(objectValues(RadioSize))
};
export default Radio;