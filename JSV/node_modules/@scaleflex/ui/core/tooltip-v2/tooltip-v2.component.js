import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
var _excluded = ["children", "arrow", "warning", "enableHover", "enterDelay", "leaveDelay", "offsetX", "offsetY", "title", "position", "size"];
import React from 'react';
import PT from 'prop-types';
import 'tippy.js/dist/tippy.css';
import 'tippy.js/animations/scale.css';
import { intrinsicComponent, objectValues } from '../../utils/functions';
import { Position, Size } from './types';
import Styled from './tooltip-v2.styles';
var TooltipV2 = intrinsicComponent(function (_ref, ref) {
  var children = _ref.children,
    _ref$arrow = _ref.arrow,
    arrow = _ref$arrow === void 0 ? true : _ref$arrow,
    warning = _ref.warning,
    _ref$enableHover = _ref.enableHover,
    enableHover = _ref$enableHover === void 0 ? true : _ref$enableHover,
    _ref$enterDelay = _ref.enterDelay,
    enterDelay = _ref$enterDelay === void 0 ? 0 : _ref$enterDelay,
    _ref$leaveDelay = _ref.leaveDelay,
    leaveDelay = _ref$leaveDelay === void 0 ? 0 : _ref$leaveDelay,
    _ref$offsetX = _ref.offsetX,
    offsetX = _ref$offsetX === void 0 ? 0 : _ref$offsetX,
    _ref$offsetY = _ref.offsetY,
    offsetY = _ref$offsetY === void 0 ? 10 : _ref$offsetY,
    title = _ref.title,
    _ref$position = _ref.position,
    position = _ref$position === void 0 ? Position.Top : _ref$position,
    size = _ref.size,
    rest = _objectWithoutProperties(_ref, _excluded);
  var renderTooltipContent = function renderTooltipContent() {
    return /*#__PURE__*/React.createElement(Styled.TooltipText, {
      warning: warning
    }, title);
  };
  return /*#__PURE__*/React.createElement(Styled.TooltipV2, _extends({
    ref: ref,
    placement: position,
    content: renderTooltipContent(),
    interactive: enableHover,
    arrow: arrow,
    delay: [enterDelay, leaveDelay],
    $warning: warning || false,
    $size: size || Size.Sm,
    animation: "scale",
    offset: [offsetX, offsetY],
    appendTo: document.body
  }, rest), children);
});
TooltipV2.defaultProps = {
  position: Position.Top,
  size: Size.Sm,
  arrow: true,
  enableHover: true,
  warning: false,
  enterDelay: 0,
  leaveDelay: 0,
  offsetX: 0,
  offsetY: 10
};
TooltipV2.propTypes = {
  title: PT.node,
  size: PT.oneOf(objectValues(Size)),
  children: PT.element,
  arrow: PT.bool,
  warning: PT.bool,
  enterDelay: PT.number,
  leaveDelay: PT.number,
  offsetX: PT.number,
  offsetY: PT.number,
  enableHover: PT.bool,
  position: PT.oneOf(objectValues(Position))
};
export default TooltipV2;