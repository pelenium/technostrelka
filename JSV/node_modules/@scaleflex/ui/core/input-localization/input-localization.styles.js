import styled, { css } from 'styled-components';
import { generateClassNames, applyDisplayNames } from '../../utils/functions';
import { Color as PColor } from '../../utils/types/palette';
import { InputSize } from '../../utils/types';
import { sizeInputLabelMixin } from './input-localization.mixin';
var baseClassName = 'InputLocalization';
var Icon = /*#__PURE__*/styled.span.attrs({
  className: generateClassNames(baseClassName, 'Icon')
}).withConfig({
  componentId: "sc-17olgvp-0"
})(function (_ref) {
  var palette = _ref.theme.palette;
  return css(["display:flex;flex-shrink:0;color:", ";&:first-child{margin-right:4px;margin-bottom:2px;}&:last-child{margin-left:6px;margin-top:1px;}"], palette[PColor.IconsPrimary]);
});
var Container = /*#__PURE__*/styled.div.attrs({
  className: generateClassNames(baseClassName, 'Container')
}).withConfig({
  componentId: "sc-17olgvp-1"
})(["display:inline-flex;"]);
var InputLocalization = /*#__PURE__*/styled.div.attrs({
  className: generateClassNames(baseClassName, 'root')
}).withConfig({
  componentId: "sc-17olgvp-2"
})(function (_ref2) {
  var _ref2$size = _ref2.size,
    size = _ref2$size === void 0 ? InputSize.Md : _ref2$size,
    disabled = _ref2.disabled,
    theme = _ref2.theme;
  return css(["position:relative;display:flex;align-items:center;transition:all 100ms ease-out;cursor:", ";color:", ";&:hover{", "}", " ", ""], disabled ? 'default' : 'pointer', disabled ? theme.palette[PColor.ButtonDisabledText] : theme.palette[PColor.LinkStateless], !disabled && "color: ".concat(theme.palette[PColor.LinkHover], ";"), disabled && css(["", "{color:", ";cursor:default;}"], Icon, theme.palette[PColor.ButtonDisabledText]), sizeInputLabelMixin[size]);
});
var Label = /*#__PURE__*/styled.label.attrs({
  className: generateClassNames(baseClassName, 'Label')
}).withConfig({
  componentId: "sc-17olgvp-3"
})(["flex-grow:1;"]);
var Styled = applyDisplayNames({
  Container: Container,
  InputLocalization: InputLocalization,
  Label: Label,
  Icon: Icon
});
export default Styled;