import _slicedToArray from"@babel/runtime/helpers/slicedToArray";import React,{useState}from"react";import{Crop as CropIcon}from"@scaleflex/icons/crop";import{useStore}from"../../../hooks";import ToolsBarItemButton from"../../ToolsBar/ToolsBarItemButton";import{TOOLS_IDS}from"../../../utils/constants";import{StyledToolsBarItemButtonLabel}from"../../ToolsBar/ToolsBar.styled";import CropPresetsOption from"./CropPresetsOption";var Crop=function(a){var b=a.selectTool,c=a.isSelected,d=useStore(),e=d.config,f=d.t,g=useState(),h=_slicedToArray(g,2),i=h[0],j=h[1];return React.createElement(ToolsBarItemButton,{className:"FIE_crop-tool",id:TOOLS_IDS.CROP,Icon:CropIcon,onClick:function selectToolAndShowPresets(a,c){b(a),j(c.currentTarget)},isSelected:c},e[TOOLS_IDS.CROP].noPresets?React.createElement(StyledToolsBarItemButtonLabel,{className:"FIE_crop-tool-label"},f("cropTool")):React.createElement(CropPresetsOption,{anchorEl:i,onClose:function closeCropPresets(){j(null)}}))};Crop.defaultProps={isSelected:!1};export default Crop;